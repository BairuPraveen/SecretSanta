% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signalp_parallel.R
\name{signalp}
\alias{signalp}
\title{predict signal peptides}
\usage{
signalp(input_obj, version, organism = c("euk", "gram+", "gram-"),
  run_mode = c("starter", "piper"), paths = NULL, truncate = NULL,
  cores = 1, legacy_method)
}
\arguments{
\item{input_obj}{an instance of class \code{CBSResult} containing protein
sequences as one of the attributes}

\item{version}{version of \code{signalp}, supported versions include: \cr
\code{signalp2}, \code{signalp3}, \code{signalp4}.}

\item{organism}{a character string with the following options:
\itemize{
\item \code{organism = "euk"} - for eukaryotes
\item \code{organism = "gram+"} - for gram-positive bacteria
\item \code{organism = "gram-"} - for gram-negative bacteria
}}

\item{run_mode}{a character string with the following options:
\itemize{
\item \code{run_mode = "starter"} - if it is the first step in pipeline
\item \code{run_mode = "piper"} - if you run this function on the output of other CBS tools
}}

\item{paths}{if required version of \code{signalp} is not acessible globally, a file
conatining a full path to it's executable should be provided; for details
please check SecretSanta vignette.}

\item{truncate}{a logical indicating:
\itemize{
\item \code{truncate = TRUE} - sequences longer 2000 residues will be
truncated to this length limit and renamed
\item \code{truncate = FALSE} - long sequences will be excluded from the analysis
}
Default is \code{truncate = TRUE}.}

\item{cores}{number of cores for multicore processing. Default is \code{cores = 1}.}

\item{legacy_method}{optional argument, which prediction method to use when running SiganlP 2.0 and SignalP 3.0:
\itemize{
\item \code{legacy_method = "hmm"} - for HMM-based predictions
\item \code{legacy_method = "nn"} - for prediction based on neural networks
}}
}
\value{
an object of SignalpResult class
}
\description{
This function calls the command line tool \code{signalp} to predict the presence and location of
signal peptide cleavage sites in amino acid sequences.
\cr
\cr
Large input files (>500 sequnces) are automatically split into smaller chunks
so that \code{signalp} prediction can be run as an embarassingly parallel process
on a specified number of cores.
}
\examples{
# read fasta file in AAStringSet object
aa <- readAAStringSet(system.file("extdata", "sample_prot_100.fasta",
package = "SecretSanta"))
# assign this object to the input_fasta slot
# of empty CBSResult object
inp <- CBSResult(in_fasta = aa[1:10])
# run signalp2 on the initial file:
r1 <- signalp(inp, version = 2, organism = 'euk', run_mode = "starter",
legacy_method = 'hmm')
r4 <- signalp(inp, version = 4, organism = 'euk', run_mode = "starter")
}
\seealso{
\code{\link{parse_signalp}}
}
