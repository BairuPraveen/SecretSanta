% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/objects.R
\docType{class}
\name{TMhmmResult-class}
\alias{TMhmmResult-class}
\alias{TMhmmResult}
\alias{setTMtibble}
\alias{setTMtibble,TMhmmResult-method}
\alias{getTMtibble,TMhmmResult-method}
\alias{getTMtibble}
\alias{getInMatfasta,TMhmmResult-method}
\alias{getInMatfasta}
\alias{getOutMatfasta,TMhmmResult-method}
\alias{getOutMatfasta}
\title{accesor functions for objects of TMhmmResult S4 class, intermediate and 
final outputs of the tmhmm prediction step}
\usage{
setTMtibble(theObject, tm_tibble)

\S4method{setTMtibble}{TMhmmResult}(theObject, tm_tibble)

\S4method{getTMtibble}{TMhmmResult}(theObject)

\S4method{getInMatfasta}{TMhmmResult}(theObject)

\S4method{getOutMatfasta}{TMhmmResult}(theObject)
}
\arguments{
\item{theObject}{object of TMhmmREsult class}

\item{tm_tibble}{parsed tmhmm output in tabular format}
}
\value{
TMhmmREsult object
}
\description{
accesor functions for objects of TMhmmResult S4 class, intermediate and 
final outputs of the tmhmm prediction step

Accessors for TMhmmResul objects
}
\section{Slots}{

\describe{
\item{\code{in_mature_fasta}}{input mature fasta, extracted from the input 
SignalpResult object}

\item{\code{out_mature_fasta}}{output mature, conatins mature sequences without
TM domains}

\item{\code{tm_tibble}}{tibble with outputs obtained from TMHMM
\itemize{
\item gene_id - unique id of the sequence
\item length - length of the protein sequence
\item ExpAA - the expected number of amino acids intransmembrane helices
\item First60 - the expected number of amino acids in transmembrane 
helices in the first 60 amino acids of the protein
\item PredHel - the number of predicted transmembrane helices by N-best
\item Topology - the topology predicted by N-best' 
}}
}}

\examples{
aa <- readAAStringSet(system.file("extdata", "sample_prot_100.fasta",
package = "SecretSanta"))
inp <- CBSResult(in_fasta = aa[1:10])
s1_sp2 <- signalp(inp, version = 2, organism = 'euk',
run_mode = "starter")                  
tm <- tmhmm(s1_sp2, TM = 1)
class(tm)
getTMtibble(tm)
}
