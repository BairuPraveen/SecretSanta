% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/objects.R
\docType{class}
\name{WolfResult-class}
\alias{WolfResult-class}
\alias{WolfResult}
\alias{setWOLFtibble}
\alias{setWOLFtibble,WolfResult-method}
\alias{setWOLFtibble}
\alias{getWOLFtibble,WolfResult-method}
\alias{getWOLFtibble}
\title{An S4 class to represent outputs of WolfPsort}
\usage{
setWOLFtibble(theObject, wolf_tibble)

\S4method{setWOLFtibble}{WolfResult}(theObject, wolf_tibble)

\S4method{getWOLFtibble}{WolfResult}(theObject)
}
\arguments{
\item{theObject}{an object of WolfResult class}

\item{wolf_tibble}{parsed output of wolfpsort in tabular format}
}
\value{
WolfResult object
}
\description{
An S4 class to represent outputs of WolfPsort

Accessors for WolfResult objects
}
\section{Slots}{

\describe{
\item{\code{wolf_tibble}}{tibble with outputs obtained from wolfpsort
\itemize{
  \item gene_id - unique sequence id
  \item localization - the most probable localization
}}
}}

\examples{
my_pa <- manage_paths(system.file("extdata", 
                                  "sample_paths",
                                  package = "SecretSanta"))
aa <- readAAStringSet(system.file("extdata", 
                                  "small_prot.fasta",
                                   package = "SecretSanta"))
                                                          
inp <- SignalpResult(in_fasta = aa)
s1_sp2 <- signalp(inp,
                 version = 2,
                 'euk',
                 run_mode = "starter",
                 paths = my_pa)
w <- wolfpsort(s1_sp2, 'fungi', my_pa)
class(w)
getWOLFtibble(w)
}
