% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wolfpsort.R
\name{wolfpsort}
\alias{wolfpsort}
\title{predict subcellular protein localization with WoLFpsort}
\usage{
wolfpsort(input_obj, organism = c("plant", "animal", "fungi"),
  run_mode = c("starter", "piper"), paths = NULL)
}
\arguments{
\item{input_obj}{Object of CSBResult class}

\item{organism}{set relevant taxonomic group,
options include: \strong{plant},
\strong{animal}, \strong{fungi};}

\item{run_mode}{\strong{starter} - if it is the first step in pipeline; \cr
\strong{piper} - if you run this function on the output of other methods;}

\item{paths}{if wolfpsort is not acessible globally, a file
conatining a full path to it's executable should be provided; for details
please check SecretSanta vignette.}
}
\value{
object of WolfResult class
}
\description{
This function runs WoLF PSORT to predict protein cellular sub-localisation
and returns the most probbale one. Including this step in secretome 
prediction pipelines provides additional supportig evidence that a protein
might be secreted and deposited outside the cell.\cr
\cr
Recommended to run on the late stages of secretome prediction pipeline.\cr
\cr
Also see targetp function - for similar functionality.
}
\examples{
# read fasta file in AAStringSet object
aa <- readAAStringSet(system.file("extdata","sample_prot_100.fasta",
package = "SecretSanta"))
# assign this object to the input_fasta slot of CBSResult object
inp <- CBSResult(in_fasta = aa[1:10])
# run signalp2 on the initial file:
step1_sp2 <- signalp(inp, version = 2, organism ='euk',
run_mode = "starter")
# run wolfpsort on the signalp output:
w <- wolfpsort(step1_sp2, 'fungi', run_mode = 'piper')
}
