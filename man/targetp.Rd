% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/targetp_parallel.R
\name{targetp}
\alias{targetp}
\title{predict subcellular protein localization with TargetP}
\usage{
targetp(input_obj, network = c("P", "N"), run_mode = c("starter", "piper"),
  paths = NULL, cores = NULL)
}
\arguments{
\item{input_obj}{an instance of CBSResult class containing protein 
sequences in one of the slots}

\item{network}{\strong{P} - for plants; \cr
\strong{N} - for non-plants;}

\item{run_mode}{\strong{starter} - if it is the first step in pipeline; \cr
\strong{piper} - if you run this function on the output of other CBS tools;}

\item{paths}{if targetp is not acessible globally, a file
conatining a full path to it's executable should be provided; for details
please check SecretSanta vignette.}

\item{cores}{optional arguments, number of cores to run the parallel process
on. If not set default will be 1.}
}
\value{
an object of TargetpResult class
}
\description{
This function calls local targetp to predict subcellular localisation of 
a protein.\cr
\cr
For large inputs (\strong{>1000} sequences) will automatically run
as a massive paralle job.
}
\examples{
# read fasta file in AAStringSet object
aa <- readAAStringSet(system.file("extdata", "sample_prot_100.fasta",
package = "SecretSanta"))
# assign this object to the input_fasta 
# slot of CBSResult object
inp <- CBSResult(in_fasta = aa[1:10])
# run target prediction
tp_result <- targetp(input_obj = inp, network = 'N', run_mode = 'starter')
}
